#ifndef DrawingContext_hpp
#define DrawingContext_hpp
////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <SimpleEngine/myImports.hpp>
#include <SimpleEngine/ToolBox/NonCopyable.hpp>
#include <SimpleEngine/Core/Manager.hpp>
#include <SimpleEngine/Core/Context.hpp>
////////////////////////////////////////////////////////////
namespace se
{
    ////////////////////////////////////////////////////////////
    /// Drawing context, this class contains a sprite
    ////////////////////////////////////////////////////////////
    class SE_API DrawingContext : public NonCopyable, public Context
    {
        public:
        ////////////////////////////////////////////////////////////
        /// Constructor
        ////////////////////////////////////////////////////////////
        DrawingContext();

        ////////////////////////////////////////////////////////////
        /// Constructor
        /// \param image: sprite's image according to MEDIAS_CONF_FILE
        ////////////////////////////////////////////////////////////
        DrawingContext(const std::string& image);

        ////////////////////////////////////////////////////////////
        /// Gettors/Settors
        ////////////////////////////////////////////////////////////
        sf::Sprite& getSprite();
        DrawingContext& setSprite(sf::Sprite sprite);
        ////////////////////////////////////////////////////////////

        ////////////////////////////////////////////////////////////
        /// \return false if the context is not initialized (no sprite initialized).
        ////////////////////////////////////////////////////////////
        bool isValid() const;

        private:

        /** Sprite to draw **/
        // TODO : allow multiple sprite entities.
        sf::Sprite mySprite;
    };
}
#endif
